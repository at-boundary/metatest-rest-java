# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
 build:

   runs-on: ubuntu-latest
   permissions:
     contents: read

   steps:
   - uses: actions/checkout@v4
   - name: Set up JDK 18
     uses: actions/setup-java@v4
     with:
       java-version: '18'
       distribution: 'temurin'

   # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
   # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
   - name: Setup Gradle
     uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
   - name: Grant execute permission for gradlew
     run: chmod +x gradlew
   - name: Build with Gradle Wrapper
     run: ./gradlew build -x test

 unit_tests:
   needs: build
   runs-on: ubuntu-latest
   permissions:
     contents: read
   steps:
     - uses: actions/checkout@v4
     - name: Set up JDK 18
       uses: actions/setup-java@v4
       with:
         java-version: '18'
         distribution: 'temurin'
     - name: Setup Gradle
       uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
     - name: Grant execute permission for gradlew
       run: chmod +x gradlew
     - name: Run Unit Tests
       run: ./gradlew clean test --tests "metatest.unit.*" --info -DrunWithMetatest=false

integration_tests:
     needs: unit_tests
     runs-on: ubuntu-latest
     permissions:
       contents: read
     steps:
       - uses: actions/checkout@v4

       - name: Set up JDK 18
         uses: actions/setup-java@v4
         with:
           java-version: '18'
           distribution: 'temurin'

       - name: Setup Gradle
         uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

       - name: Grant execute permission for gradlew
         run: chmod +x gradlew

       - name: Pull latest WireMock image
         run: docker pull wiremock/wiremock:latest

       - name: Start a WireMock server for mocked REST api
         run: |
           docker run -d --name wiremock-mocked-rest-api -p 8089:8089 \
             -v $GITHUB_WORKSPACE/lib/src/test/resources/mappings:/home/wiremock/mappings \
             wiremock/wiremock:latest --port 8089 --verbose

       - name: Run Integration Tests
         run: ./gradlew clean test --tests "metatest.integration.*" --info -DrunWithMetatest=true


  # dependency-submission:

  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 18
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '18'
  #       distribution: 'temurin'

  #   # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
  #   # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
  #   - name: Generate and submit dependency graph
  #     uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
 publish:
   needs: unit_tests
   runs-on: ubuntu-latest
   permissions:
     contents: read
     packages: write
   steps:
     - uses: actions/checkout@v4
     - name: Set up JDK 18
       uses: actions/setup-java@v4
       with:
         java-version: '18'
         distribution: 'temurin'
     - name: Setup Gradle
       uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
     - name: Grant execute permission for gradlew
       run: chmod +x gradlew
     - name: Publish package
       run: ./gradlew publish
       env:
         GITHUB_ACTOR: ${{ github.actor }}
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
